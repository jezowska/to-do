[{"/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/index.js":"1","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/pages/HomePage.jsx":"2","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/pages/LoginPage.jsx":"3","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/App.jsx":"4","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/utils/PrivateRoute.jsx":"5","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/context/AuthContext.jsx":"6","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/components/Header.jsx":"7","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/components/Task.jsx":"8","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/components/NewTask.jsx":"9"},{"size":255,"mtime":1665491379091,"results":"10","hashOfConfig":"11"},{"size":979,"mtime":1665563691408,"results":"12","hashOfConfig":"11"},{"size":1158,"mtime":1665564492577,"results":"13","hashOfConfig":"11"},{"size":797,"mtime":1665514853925,"results":"14","hashOfConfig":"11"},{"size":390,"mtime":1665513445286,"results":"15","hashOfConfig":"11"},{"size":3161,"mtime":1665559419776,"results":"16","hashOfConfig":"11"},{"size":438,"mtime":1665516439201,"results":"17","hashOfConfig":"11"},{"size":916,"mtime":1665562569623,"results":"18","hashOfConfig":"11"},{"size":1148,"mtime":1665563586777,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1lswq6g",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"23"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/index.js",[],[],[],"/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/pages/HomePage.jsx",["51"],[],"import React from \"react\"\nimport AuthContext from \"../context/AuthContext\"\nimport { useContext, useState, useEffect } from \"react\"\n\nimport \"./HomePage.css\"\nimport Task from \"../components/Task\"\nimport NewTask from \"../components/NewTask\"\nconst HomePage = () => {\n  const { authTokens } = useContext(AuthContext)\n  const [tasks, setTasks] = useState([])\n\n  const getTasks = async () => {\n    const response = await fetch(\"http://127.0.0.1:8000/api/tasks\", {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + String(authTokens?.access),\n      },\n    })\n    console.log(\"Auth token (from home): \", authTokens)\n    const data = await response.json()\n    setTasks(data)\n  }\n\n  useEffect(() => {\n    getTasks()\n  }, [])\n\n  return (\n    <div className=\"home-page__container\">\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} />\n      ))}\n\n      <NewTask />\n    </div>\n  )\n}\n\nexport default HomePage\n","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/pages/LoginPage.jsx",["52"],[],"/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/App.jsx",[],[],"/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/utils/PrivateRoute.jsx",[],[],"/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/context/AuthContext.jsx",["53","54","55"],[],"import { useState, createContext, useEffect } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport jwt_decode from \"jwt-decode\"\n\nconst AuthContext = createContext()\n\nexport default AuthContext\n\nexport const AuthProvider = ({ children }) => {\n  const [authTokens, setAuthTokens] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? JSON.parse(localStorage.getItem(\"authTokens\"))\n      : null\n  )\n  const [user, setUser] = useState(() =>\n    localStorage.getItem(\"authTokens\")\n      ? jwt_decode(localStorage.getItem(\"authTokens\"))\n      : null\n  )\n  const [loading, setLoading] = useState(true)\n\n  const navigate = useNavigate()\n\n  const loginUser = async (e) => {\n    e.preventDefault()\n\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: e.target.email.value,\n        password: e.target.password.value,\n      }),\n    })\n\n    const data = await response.json()\n\n    if (response.status === 200) {\n      setAuthTokens(data)\n      setUser(jwt_decode(data.access))\n      localStorage.setItem(\"authTokens\", JSON.stringify(data))\n      navigate(\"/\")\n    } else {\n      alert(\"Something went wrong. Please try again later.\")\n    }\n  }\n\n  const logoutUser = () => {\n    setUser(null)\n    setAuthTokens(null)\n    localStorage.removeItem(\"authTokens\")\n    navigate(\"/login\")\n  }\n\n  const registerUser = async (e) => {\n    e.preventDefault()\n\n    const response = await fetch(\"http://127.0.0.1:8000/api/register\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        first_name: e.target.first_name.value,\n        email: e.target.email.value,\n        password: e.target.password.value,\n      }),\n    })\n\n    const data = await response.json()\n\n    if (response.status !== 201) {\n      alert(\"Error: \" + response.status)\n    }\n  }\n\n  const updateToken = async () => {\n    let response = await fetch(\"http://127.0.0.1:8000/api/token/refresh/\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ refresh: authTokens?.refresh }),\n    })\n\n    let data = await response.json()\n\n    if (response.status === 200) {\n      setAuthTokens(data)\n      console.log(\"Token updated successfully\")\n      setUser(jwt_decode(data.access))\n      localStorage.setItem(\"authTokens\", JSON.stringify(data))\n    } else {\n      logoutUser()\n    }\n\n    if (loading) {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (loading) {\n      updateToken()\n    }\n\n    let fourMinutes = 1000 * 60 * 4\n\n    let interval = setInterval(() => {\n      if (authTokens) {\n        updateToken()\n      }\n    }, fourMinutes)\n\n    return () => clearInterval(interval)\n  }, [authTokens, loading])\n\n  const contextData = {\n    loginUser: loginUser,\n    user: user,\n    authTokens: authTokens,\n    logoutUser: logoutUser,\n    setAuthTokens: setAuthTokens,\n    setUser: setUser,\n  }\n  return (\n    <AuthContext.Provider value={contextData}>{children}</AuthContext.Provider>\n  )\n}\n","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/components/Header.jsx",[],[],"/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/components/Task.jsx",["56"],[],"import React from \"react\"\nimport { ReactComponent as TrashIcon } from \"../images/trash-icon.svg\"\nimport AuthContext from \"../context/AuthContext\"\nimport { useContext } from \"react\"\nimport { useEffect } from \"react\"\nimport \"./Task.css\"\nconst Task = ({ task }) => {\n  const { authTokens } = useContext(AuthContext)\n\n  const deleteNote = async () => {\n    await fetch(`http://127.0.0.1:8000/api/delete-task/${task.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authTokens.access}`,\n      },\n    })\n  }\n  useEffect(() => {}, [deleteNote])\n  return (\n    <div className=\"task__container\">\n      {task.completed ? (\n        <p className=\"task\">{task.body}</p>\n      ) : (\n        <p className=\"task task--completed\">{task.body}</p>\n      )}\n      <TrashIcon className=\"trash-icon\" onClick={deleteNote} />\n    </div>\n  )\n}\n\nexport default Task\n","/Users/dariajezowska/Documents/GitHub/to-do-app2/frontend/src/components/NewTask.jsx",[],[],{"ruleId":"57","severity":1,"message":"58","line":27,"column":6,"nodeType":"59","endLine":27,"endColumn":8,"suggestions":"60"},{"ruleId":"61","severity":1,"message":"62","line":3,"column":10,"nodeType":"63","messageId":"64","endLine":3,"endColumn":14},{"ruleId":"61","severity":1,"message":"65","line":57,"column":9,"nodeType":"63","messageId":"64","endLine":57,"endColumn":21},{"ruleId":"61","severity":1,"message":"66","line":72,"column":11,"nodeType":"63","messageId":"64","endLine":72,"endColumn":15},{"ruleId":"57","severity":1,"message":"67","line":118,"column":6,"nodeType":"59","endLine":118,"endColumn":27,"suggestions":"68"},{"ruleId":"57","severity":1,"message":"69","line":10,"column":9,"nodeType":"70","endLine":18,"endColumn":4,"suggestions":"71"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTasks'. Either include it or remove the dependency array.","ArrayExpression",["72"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'registerUser' is assigned a value but never used.","'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'updateToken'. Either include it or remove the dependency array.",["73"],"The 'deleteNote' function makes the dependencies of useEffect Hook (at line 19) change on every render. To fix this, wrap the definition of 'deleteNote' in its own useCallback() Hook.","VariableDeclarator",["74"],{"desc":"75","fix":"76"},{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [getTasks]",{"range":"81","text":"82"},"Update the dependencies array to be: [authTokens, loading, updateToken]",{"range":"83","text":"84"},"Wrap the definition of 'deleteNote' in its own useCallback() Hook.",{"range":"85","text":"86"},[777,779],"[getTasks]",[2858,2879],"[authTokens, loading, updateToken]",[335,577],"useCallback(async () => {\n    await fetch(`http://127.0.0.1:8000/api/delete-task/${task.id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${authTokens.access}`,\n      },\n    })\n  })"]